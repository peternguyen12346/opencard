window.addEventListener("DOMContentLoaded", function () {
  console.log("‚úÖ DOM loaded!");

  if (typeof Pi === 'undefined') {
    alert('‚ùå Pi SDK ch∆∞a ƒë∆∞·ª£c t·∫£i!');
    console.error('Pi SDK is undefined!');
    return;
  }

  // Kh·ªüi t·∫°o Pi SDK
  Pi.init({ version: "2.0" });
  console.log("‚úÖ Pi SDK initialized!", Pi);

  const resultEl = document.getElementById("result");
  const authBtn = document.getElementById("authBtn");
  const payBtn = document.getElementById("payBtn");

  if (!authBtn || !payBtn) {
    console.error("‚ùå Kh√¥ng t√¨m th·∫•y authBtn ho·∫∑c payBtn trong DOM!");
    return;
  }

  let currentUser = null;

  // -----------------------------
  // 1. ƒêƒÉng nh·∫≠p b·∫±ng Pi
  // -----------------------------
  authBtn.addEventListener("click", async () => {
    try {
      const scopes = ["payments"];
      const auth = await Pi.authenticate(scopes, onIncompletePaymentFound);
      currentUser = auth.user;
      console.log("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng:", currentUser);
      resultEl.textContent = "ƒêƒÉng nh·∫≠p th√†nh c√¥ng:\n" + JSON.stringify(currentUser, null, 2);
      payBtn.disabled = false; // B·∫≠t n√∫t thanh to√°n
    } catch (error) {
      console.error("‚ùå L·ªói ƒëƒÉng nh·∫≠p:", error);
      resultEl.textContent = "L·ªói ƒëƒÉng nh·∫≠p: " + error.message;
    }
  });

  // -----------------------------
  // 2. Thanh to√°n 1 Pi
  // -----------------------------
  payBtn.addEventListener("click", async () => {
    if (!currentUser) {
      alert("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc!");
      return;
    }

    try {
      const amount = 1.0;
      resultEl.textContent = "ƒêang t·∫°o giao d·ªãch...";

      // N·∫øu b·∫°n c·∫ßn g·ªçi backend ƒë·ªÉ t·∫°o payment request, uncomment:
      // const res = await fetch(`/start-payment/?uid=${currentUser.uid}&amount=${amount}`);
      // if (!res.ok) throw new Error("L·ªói HTTP " + res.status);
      // const data = await res.json();
      // console.log("Payment request t·ª´ server:", data);

      await Pi.createPayment({
        amount: amount,
        memo: "Thanh to√°n 1 Pi",
        metadata: { purpose: "demo" },
        onComplete: function(payment) {
          console.log("‚úÖ Thanh to√°n th√†nh c√¥ng:", payment);
          resultEl.textContent = "Thanh to√°n th√†nh c√¥ng:\n" + JSON.stringify(payment, null, 2);
        },
        onError: function(error) {
          console.error("‚ùå L·ªói thanh to√°n:", error);
          resultEl.textContent = "L·ªói thanh to√°n: " + error.message;
        },
        onCancel: function() {
          console.log("‚ö† Ng∆∞·ªùi d√πng h·ªßy thanh to√°n");
          resultEl.textContent = "Ng∆∞·ªùi d√πng h·ªßy thanh to√°n";
        }
      });
    } catch (err) {
      console.error("‚ùå L·ªói trong qu√° tr√¨nh thanh to√°n:", err);
      resultEl.textContent = "L·ªói thanh to√°n: " + err.message;
    }
  });

  // Callback khi c√≥ giao d·ªãch ch∆∞a ho√†n t·∫•t
  function onIncompletePaymentFound(payment) {
    console.log("üîÅ Giao d·ªãch ch∆∞a ho√†n t·∫•t:", payment);
  }
});
