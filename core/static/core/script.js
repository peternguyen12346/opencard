window.addEventListener("DOMContentLoaded", function () {
  console.log("‚úÖ DOM loaded!");

  if (typeof Pi === "undefined") {
    alert("‚ùå Pi SDK ch∆∞a ƒë∆∞·ª£c t·∫£i!");
    console.error("Pi SDK is undefined!");
    return;
  }

  Pi.init({ version: "2.0" });
  console.log("‚úÖ Pi SDK initialized!", Pi);

  const resultEl = document.getElementById("result");
  const authBtn = document.getElementById("authBtn");
  const payBtn = document.getElementById("payBtn");

  if (!authBtn || !payBtn) {
    console.error("‚ùå Kh√¥ng t√¨m th·∫•y n√∫t authBtn ho·∫∑c payBtn trong DOM!");
    return;
  }

  let currentUser = null;

  // --- N√∫t ƒëƒÉng nh·∫≠p ---
  authBtn.addEventListener("click", async () => {
    try {
      console.log("üîπ ƒêang nh·∫•n ƒëƒÉng nh·∫≠p Pi...");
      const scopes = ["payments"];
      const auth = await Pi.authenticate(scopes, onIncompletePaymentFound);
      currentUser = auth.user;
      console.log("‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng:", currentUser);
      resultEl.textContent = "ƒêƒÉng nh·∫≠p th√†nh c√¥ng:\n" + JSON.stringify(currentUser, null, 2);
      payBtn.disabled = false;
    } catch (error) {
      console.error("‚ùå L·ªói ƒëƒÉng nh·∫≠p:", error);
      resultEl.textContent = "L·ªói ƒëƒÉng nh·∫≠p: " + error.message;
    }
  });

  // --- N√∫t thanh to√°n 1 Pi ---
  payBtn.addEventListener("click", async () => {
    if (!currentUser) {
      alert("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p tr∆∞·ªõc!");
      return;
    }

    try {
      const uid = currentUser.uid;
      const amount = 1.0;

      // N·∫øu backend c·∫ßn t·∫°o payment request
      const res = await fetch(`/start-payment/?uid=${uid}&amount=${amount}`);
      if (!res.ok) throw new Error("L·ªói HTTP " + res.status);
      const data = await res.json();
      console.log("üìÑ Y√™u c·∫ßu thanh to√°n t·ª´ server:", data);
      resultEl.textContent = "Y√™u c·∫ßu thanh to√°n:\n" + JSON.stringify(data, null, 2);

      // Th·ª±c hi·ªán thanh to√°n Pi
      await Pi.createPayment({
        amount: amount,
        memo: "Thanh to√°n 1 Pi",
        metadata: { purpose: "demo" },
        onComplete: function (payment) {
          console.log("‚úÖ Thanh to√°n th√†nh c√¥ng:", payment);
          resultEl.textContent = "Thanh to√°n th√†nh c√¥ng:\n" + JSON.stringify(payment, null, 2);
        },
        onError: function (error) {
          console.error("‚ùå L·ªói thanh to√°n:", error);
          resultEl.textContent = "L·ªói thanh to√°n: " + error.message;
        },
        onCancel: function () {
          console.log("‚ö† Ng∆∞·ªùi d√πng h·ªßy thanh to√°n");
          resultEl.textContent = "Ng∆∞·ªùi d√πng h·ªßy thanh to√°n";
        },
      });
    } catch (err) {
      console.error("‚ùå L·ªói thanh to√°n:", err);
      resultEl.textContent = "L·ªói thanh to√°n: " + err.message;
    }
  });

  // Callback cho giao d·ªãch ch∆∞a ho√†n t·∫•t
  function onIncompletePaymentFound(payment) {
    console.log("üîÅ Giao d·ªãch ch∆∞a ho√†n t·∫•t:", payment);
  }
});
